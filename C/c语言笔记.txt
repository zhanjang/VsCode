C语言中使用函数功能需要引入函数库(头文件),头文件分标准和第三方
c语言中有严格的数据类型限制,建立变量时必须声明存储数据的类型
数据类型 char字符型注与字符串不同 short短型 int整型 long长整型 longlong超长整型 float浮点型 double双精度浮点型 主要区别为字节大小
printf函数需要遵循严格的格式双引号包围输出内容的格式内容中的变量需要用占位符提前格式化用法类似python中的字符串格式化(注不能使用f({变量名的方式实现}))
c中的常量需要声明有三种方式实现
	1.在变量前声明const(注此处为常变量即仍为变量只是不能更改数据内容与后面两种有本质区别)
	2.在函数之外使用define来定义
	3.enum定义枚举常量用法类似2
字符串
	c语言中没有字符串的说法只有字符的语法故定义字符串用的实际时数据容器
	定义时注意是否有\0的转义字符作为结尾,如果没有定义会出问题
	通过调试加监视的方式确定是否有\0作为结尾
转义字符
\b		\f 		\n 		\r 		\ddd 							\xdd
退格符 	进纸符	换行		回车		八进制转换十进制的ASCII ddd为三个数字 十六进制转十进制的ASCII码,x为十六进制的英文缩写dd同八进制
转义字符在计算字符长度只算一个 例"c:\test628test.c"长度只有14 两个\t各算一个长度 \62算一个长度 注意8不算进转义字符因为8进制里面没有8 注意八进制和十六进制对应的十进制有没有对应的ASCII码不然单独算长度 例\627 十进制为407>127 故长度为2 ASCII码只有127个

结构体 struct 结构体名
{
	数据类型 变量名;
} 实例名称;
共用体 union 共用体名
{
	数据类型 变量名;
} 实例名称;
共用体一次只能保存一个成员变量的值,修改某个值会改所有的
结构体和共用体的区别 结构体中的每个变量独自占用内存空间 共用体的所有变量共用一个空间大小为共用体中最大的那一个
循环中不要用内循环改变外循环的循环条件,否则可能影响循环
库分为.c源文件库.lib静态库和.dll​​动态库三种,三种需要头文件声明,c源文件库不需要额外引入,静态库和动态库需要 #pragma comment(lib, "test.lib") 代码引入库